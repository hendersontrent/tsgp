// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cov_exp_quad_cpp
NumericMatrix cov_exp_quad_cpp(NumericVector xa, NumericVector xb, double sigma, double l);
RcppExport SEXP _tsgp_cov_exp_quad_cpp(SEXP xaSEXP, SEXP xbSEXP, SEXP sigmaSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xb(xbSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_exp_quad_cpp(xa, xb, sigma, l));
    return rcpp_result_gen;
END_RCPP
}
// cov_linear_cpp
NumericMatrix cov_linear_cpp(NumericVector xa, NumericVector xb, double sigma_b, double sigma_v, double c);
RcppExport SEXP _tsgp_cov_linear_cpp(SEXP xaSEXP, SEXP xbSEXP, SEXP sigma_bSEXP, SEXP sigma_vSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xb(xbSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_b(sigma_bSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_linear_cpp(xa, xb, sigma_b, sigma_v, c));
    return rcpp_result_gen;
END_RCPP
}
// cov_noise_cpp
NumericMatrix cov_noise_cpp(NumericVector xa, NumericVector xb, double sigma);
RcppExport SEXP _tsgp_cov_noise_cpp(SEXP xaSEXP, SEXP xbSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xb(xbSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_noise_cpp(xa, xb, sigma));
    return rcpp_result_gen;
END_RCPP
}
// cov_periodic_cpp
NumericMatrix cov_periodic_cpp(NumericVector xa, NumericVector xb, double sigma, double l, int p);
RcppExport SEXP _tsgp_cov_periodic_cpp(SEXP xaSEXP, SEXP xbSEXP, SEXP sigmaSEXP, SEXP lSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xb(xbSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_periodic_cpp(xa, xb, sigma, l, p));
    return rcpp_result_gen;
END_RCPP
}
// cov_rat_quad_cpp
NumericMatrix cov_rat_quad_cpp(NumericVector xa, NumericVector xb, double sigma, double alpha, double l);
RcppExport SEXP _tsgp_cov_rat_quad_cpp(SEXP xaSEXP, SEXP xbSEXP, SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xb(xbSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_rat_quad_cpp(xa, xb, sigma, alpha, l));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tsgp_cov_exp_quad_cpp", (DL_FUNC) &_tsgp_cov_exp_quad_cpp, 4},
    {"_tsgp_cov_linear_cpp", (DL_FUNC) &_tsgp_cov_linear_cpp, 5},
    {"_tsgp_cov_noise_cpp", (DL_FUNC) &_tsgp_cov_noise_cpp, 3},
    {"_tsgp_cov_periodic_cpp", (DL_FUNC) &_tsgp_cov_periodic_cpp, 5},
    {"_tsgp_cov_rat_quad_cpp", (DL_FUNC) &_tsgp_cov_rat_quad_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_tsgp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
